@startUML
class User {
  + userID: int
  + name: String
  + email: String
  + address: String
  + register(): void
}

class PaymentMethod {
  + cardNumber: String
  + expirationDate: Date
  + cvv: String
  + addCard(): void
}

class CreditCardValidator {
  + validateCard(cardNumber: String, expirationDate: Date, cvv: String): boolean
}

class Transaction {
  + transactionID: int
  + amount: double
  + recipient: String
  + processTransaction(): void
}

class TransactionHistory {
  + transactions: List<Transaction>
  + getTransactionHistory(): List<Transaction>
}

class FraudDetector {
  + analyzeTransaction(transaction: Transaction): boolean
}

User "1" --> "*" PaymentMethod : "adds"
PaymentMethod --> CreditCardValidator : "uses"
User "1" --> "*" Transaction : "initiates"
PaymentMethod --> Transaction : "used in"
User --> TransactionHistory : "has"
TransactionHistory "1" --> "*" Transaction : "contains"
Transaction --> FraudDetector : "analyzed by"
@endUML
