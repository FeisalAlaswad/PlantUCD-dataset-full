@startuml
class User {
    +username: String
    +password: String
    +authenticate(): Boolean
}

class Authentication {
    +login(user: User): Boolean
    +logout(user: User): Boolean
}

class Transaction {
    +transactionID: String
    +amount: Double
    +timestamp: Date
}

class DataInput {
    +submitTransaction(transaction: Transaction): Boolean
}

class FraudDetection {
    +analyze(transaction: Transaction): Boolean
}

class MLModel {
    +train(data: List<Transaction>): Boolean
    +predict(transaction: Transaction): Boolean
}

class Alert {
    +alertID: String
    +message: String
    +send(): Boolean
}

class Admin {
    +adminID: String
    +manageConfiguration(): Boolean
}

class AuditLog {
    +logID: String
    +action: String
    +timestamp: Date
}

class Report {
    +reportID: String
    +generateReport(): Boolean
}

class Role {
    +roleName: String
    +permissions: List<String>
}

class Encryption {
    +encrypt(data: String): String
    +decrypt(data: String): String
}

class PerformanceMonitor {
    +monitorResources(): Boolean
    +generateMetrics(): Boolean
}

class RealTimeProcessor {
    +processTransaction(transaction: Transaction): Boolean
}

class LanguageSupport {
    +supportedLanguages: List<String>
    +setLanguage(language: String): Boolean
}

User --> Authentication : "authenticates"
Transaction --> DataInput : "submits"
Transaction --> FraudDetection : "analyzed by"
FraudDetection --> MLModel : "uses"
FraudDetection --> Alert : "triggers"
Admin --> FraudDetection : "manages"
Transaction --> AuditLog : "recorded in"
Alert --> AuditLog : "recorded in"
FraudDetection --> Report : "generates"
User --> Role : "assigned to"
Transaction --> Encryption : "encrypted by"
User --> Encryption : "protected by"
FraudDetection --> PerformanceMonitor : "monitored by"
DataInput --> RealTimeProcessor : "processed in"
FraudDetection --> RealTimeProcessor : "integrates with"
User --> LanguageSupport : "uses"
@enduml
