@startuml

class User {
    +userID: int
    +username: String
    +email: String
    +password: String
    +role: String
    +createAccount()
    +login()
}

class Admin {
    +adminID: int
    +manageEvents()
}

class Participant {
    +participantID: int
    +registerForEvent()
}

User <|-- Admin
User <|-- Participant

class Event {
    +eventID: int
    +name: String
    +date: Date
    +location: String
    +description: String
    +createEvent()
    +editEvent()
    +deleteEvent()
}

Admin --|> Event : manage

class Registration {
    +registrationID: int
    +eventID: int
    +participantID: int
    +register()
    +cancelRegistration()
}

Event "1" <-- "0..*" Registration : has
Participant "1" <-- "0..*" Registration : registers

class Payment {
    +paymentID: int
    +amount: double
    +paymentDate: Date
    +processPayment()
}

Registration "1" --> "1" Payment : has

class Feedback {
    +feedbackID: int
    +participantID: int
    +eventID: int
    +rating: int
    +comment: String
    +submitFeedback()
}

Participant "1" <-- "0..*" Feedback : provides
Event "1" <-- "0..*" Feedback : receives

class Notification {
    +notificationID: int
    +message: String
    +sendNotification()
}

User "1" --> "0..*" Notification : receives
Admin "1" --> "0..*" Notification : sends

class Report {
    +reportID: int
    +generateReport()
}

Admin --> Report : generates
Event --> Report : contributes
Participant --> Report : contributes

@enduml
