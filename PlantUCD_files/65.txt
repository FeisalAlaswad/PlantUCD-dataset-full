@startuml
class User {
    +login(): Boolean
    +logout(): void
}

class Role {
    +roleType: String
    +assignRole(): void
}

User --> Role : "has"

class Document {
    +upload(): void
    +review(): void
    +approve(): Boolean
}

User --> Document : "manages"

class Audit {
    +schedule(): void
    +assignAuditor(): void
}

class Auditor
Audit --> Auditor : "is assigned to"

class Metric {
    +name: String
    +value: Float
}

class KPI {
    +track(): void
}

KPI *-- Metric : "includes"

class NonConformance {
    +logIssue(): void
    +trackIssue(): void
    +resolveIssue(): Boolean
}

User --> NonConformance : "handles"

class Training {
    +record(): void
    +complete(): Boolean
}

class Employee
Employee --> Training : "has completed"

class Supplier {
    +evaluate(): Boolean
    +manage(): void
}

class QualityManager
QualityManager --> Supplier : "monitors"

class Risk {
    +assess(): void
    +document(): void
}

class Process
Process --> Risk : "has associated"

class Inspection {
    +recordResult(): void
    +trackResult(): void
}

class Product
Product --> Inspection : "is inspected by"

class Feedback {
    +collect(): void
    +analyze(): void
}

class Customer
Customer --> Feedback : "provides"

class Notification {
    +sendAlert(): void
    +setDeadlineReminder(): void
}

class Event
Event --> Notification : "triggers"

class ChangeRequest {
    +submit(): void
    +approve(): Boolean
}

Process --> ChangeRequest : "affected by"

class Report {
    +generate(): void
    +analyze(): void
}

Metric --> Report : "is included in"
@enduml
