@startuml
class User {
  +userID: String
  +password: String
  +authenticate(): Boolean
}

class Role {
  +roleID: String
  +roleName: String
}

User -- "1" Role : has

class Transaction {
  +transactionID: String
  +amount: Double
  +timestamp: Date
  +status: String
}

class FraudDetectionRule {
  +ruleID: String
  +threshold: Double
  +evaluate(transaction: Transaction): Boolean
}

Transaction -- "1..*" FraudDetectionRule : evaluated by

class Alert {
  +alertID: String
  +message: String
  +sendAlert(): Boolean
}

class Administrator {
  +adminID: String
  +name: String
}

Alert -- "1" Administrator : notifies

class FraudulentTransaction {
  +transactionID: String
  +reason: String
  +flagTransaction(): Boolean
}

Transaction -- "1" FraudulentTransaction : is flagged by

class UserActivityLog {
  +logID: String
  +activityType: String
  +timestamp: Date
}

User -- "1..*" UserActivityLog : records

class FraudCase {
  +caseID: String
  +status: String
  +investigate(): Boolean
}

FraudulentTransaction -- "1..*" FraudCase : leads to

class RiskScore {
  +score: Double
  +calculateScore(transaction: Transaction): Double
}

Transaction -- "1" RiskScore : evaluated by

class Blacklist {
  +blacklistID: String
  +reason: String
}

User -- "1..*" Blacklist : added to

class Report {
  +reportID: String
  +generateReport(): String
}

FraudCase -- "1..*" Report : generates

class MLModel {
  +modelID: String
  +trainModel(data: List<Transaction>): Boolean
}

FraudDetectionRule -- "1" MLModel : integrates with
@enduml