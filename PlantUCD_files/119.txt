@startuml

class User {
  +username: String
  +password: String
  +email: String
}
class AccountManager {
  +createAccount(): User
  +deleteAccount(username: String): void
}
User --> AccountManager : manages

class Language {
  +languageCode: String
  +languageName: String
}
class TranslationService {
  +setSourceLanguage(language: Language): void
  +setTargetLanguage(language: Language): void
}
Language --> TranslationService : used by

class UserInput {
  +text: String
}
TranslationService --> UserInput : provided to

class TranslationEngine {
  +processTranslation(sourceText: String, sourceLang: Language, targetLang: Language): String
}
TranslationService --> TranslationEngine : delegates to

class TranslationHistory {
  +saveHistory(user: User, translatedText: String): void
  +retrieveHistory(user: User): List<String>
}
User --> TranslationHistory : maintains

class ErrorHandler {
  +logError(errorMessage: String): void
  +displayError(user: User, errorMessage: String): void
}
TranslationService --> ErrorHandler : interacts with

class VoiceInput {
  +recordVoice(): Audio
  +convertToText(audio: Audio): String
}
VoiceInput --> TranslationService : supports

class Feedback {
  +rating: int
  +comments: String
}
User --> Feedback : submits
Feedback --> TranslationService : stored in

class TranslationModel {
  +modelName: String
  +translate(input: String): String
}
TranslationModel --> TranslationService : utilized by

class FileUpload {
  +filePath: String
  +parseFile(): List<String>
}
FileUpload --> TranslationService : supports

@enduml
