@startuml
class Customer {
    +createTicket(): Ticket
}

class Ticket {
    -id: String
    -description: String
    -status: String
    +updateStatus(newStatus: String): void
}

class SupportAgent {
    +assignTicket(ticket: Ticket): void
}

class Notification {
    +send(to: Customer, message: String): void
}

class Message {
    -content: String
    -timestamp: DateTime
}

class AuditLog {
    -logId: String
    -details: String
    -timestamp: DateTime
}

class Administrator {
    +viewAllTickets(): List<Ticket>
    +assignRole(user: User, role: String): void
}

class User {
    -role: String
}

class Report {
    +generateResolutionRate(): float
}

class Authentication {
    +login(username: String, password: String): boolean
    +logout(): void
}

class Authorization {
    +checkPermission(user: User, action: String): boolean
}

class KnowledgeBase {
    +search(query: String): List<Article>
}

class Article {
    -id: String
    -content: String
}

Customer --> Ticket : "creates"
Ticket --> SupportAgent : "assigned to"
SupportAgent --> Ticket : "updates status"
Ticket --> Notification : "triggers"
Notification --> Customer : "notifies"
Customer --> Message : "sends"
SupportAgent --> Message : "sends"
Message --> Ticket : "linked to"
Ticket --> AuditLog : "has history"
Administrator --> Ticket : "views all"
Administrator --> User : "assigns role"
Administrator --> Report : "generates"
Report --> Ticket : "analyzes"
User --> Authentication : "authenticates"
Authentication --> Authorization : "verifies"
KnowledgeBase --> Article : "contains"
Customer --> KnowledgeBase : "searches"
@enduml
