@startuml
class ATM {
    - cardReader: CardReader
    - pinValidator: PINValidator
    - authenticate(card: ATMCard, pin: String): Boolean
}

class CardReader {
    - readCard(): ATMCard
}

class PINValidator {
    - validate(pin: String): Boolean
}

class ATMCard {
    + accountId: String
}

class Account {
    - accountId: String
    - balance: Double
    - transactionHistory: List<Transaction>
    + getBalance(): Double
    + getTransactionHistory(): List<Transaction>
}

class Transaction {
    - transactionId: String
    - date: Date
    - type: String
    - amount: Double
}

class CashDispenser {
    - dispenseCash(amount: Double): Boolean
}

class CashDepositor {
    - acceptCash(amount: Double): Boolean
}

class FundsTransfer {
    - sourceAccount: Account
    - targetAccount: Account
    - transferAmount(amount: Double): Boolean
}

class Logger {
    - logTransaction(transaction: Transaction): void
    - logError(error: String): void
}

ATM --> CardReader : uses
ATM --> PINValidator : uses
PINValidator --> ATMCard : validates
ATM --> Account : accesses
Account --> Transaction : contains
ATM --> CashDispenser : interacts
ATM --> CashDepositor : interacts
Account --> ATM : verifies
Account --> FundsTransfer : involved
FundsTransfer --> Account : updates
ATM --> Logger : logs
Logger --> Transaction : records
@enduml
