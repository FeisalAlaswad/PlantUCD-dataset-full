@startuml

class CodeEditor {
  +string textContent
  +highlightSyntax()
  +autoComplete()
  +formatText()
}

class Debugger {
  +startDebugging()
  +stepOver()
  +setBreakpoint(line: int)
  +inspectVariable(variable: string)
}

class FileManager {
  +openFile(filePath: string)
  +saveFile(filePath: string)
  +closeFile()
}

class CodeFormatter {
  +formatCode(code: string): string
}

class VersionControl {
  +commitChanges(message: string)
  +pushChanges()
  +pullChanges()
}

class BuildSystem {
  +compileCode()
  +runCode()
  +showOutput()
}

class ProjectManager {
  +createProject(projectName: string)
  +switchProject(projectName: string)
}

class SyntaxChecker {
  +checkSyntax(code: string): bool
}

class Plugin {
  +installPlugin(pluginName: string)
  +enablePlugin(pluginName: string)
}

class UserPreferences {
  +setTheme(themeName: string)
  +setKeybinding(key: string, action: string)
  +setFontSize(size: int)
}

CodeEditor --> Debugger : uses
CodeEditor --> FileManager : interacts
CodeEditor --> CodeFormatter : uses
CodeEditor --> VersionControl : interacts
CodeEditor --> BuildSystem : triggers
FileManager --> ProjectManager : interacts
CodeEditor --> SyntaxChecker : validates
CodeEditor --> Plugin : supports
CodeEditor --> UserPreferences : applies

@enduml
