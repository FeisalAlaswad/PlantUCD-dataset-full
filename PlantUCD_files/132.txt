@startuml
class Campaign {
    +String campaignID
    +String name
    +Date startDate
    +Date endDate
    +createCampaign()
    +editCampaign()
    +trackCampaign()
}
class User {
    +String userID
    +String email
    +createCampaign()
}
User "1" -- "0..*" Campaign : creates

class Subscriber {
    +String subscriberID
    +String name
    +String email
    +addSubscriber()
    +editSubscriber()
    +deleteSubscriber()
}
Campaign "1" -- "0..*" Subscriber : targets

class EmailTemplate {
    +String templateID
    +String subject
    +String body
    +createTemplate()
    +editTemplate()
}
Campaign "1" -- "0..*" EmailTemplate : uses

class Workflow {
    +String workflowID
    +String name
    +triggerAction()
    +addCondition()
    +executeWorkflow()
}
User "1" -- "0..*" Workflow : creates
Workflow "1" -- "0..*" Campaign : automates

class ABTest {
    +String testID
    +String testName
    +runTest()
    +getResults()
}
Campaign "1" -- "0..*" ABTest : includes
ABTest "1" -- "0..*" EmailTemplate : tests

class Report {
    +String reportID
    +String campaignID
    +Date reportDate
    +generateReport()
    +getMetrics()
}
Campaign "1" -- "0..*" Report : generates

class ListSegment {
    +String segmentID
    +String name
    +createSegment()
    +applyFilters()
}
Subscriber "1" -- "0..*" ListSegment : belongsTo
Campaign "1" -- "0..*" ListSegment : targets

class Personalization {
    +String field
    +String value
    +applyPersonalization()
}
EmailTemplate "1" -- "0..*" Personalization : includes
Subscriber "1" -- "0..*" Personalization : stores

class Scheduler {
    +String scheduleID
    +Date scheduleTime
    +scheduleEmail()
    +cancelSchedule()
}
Campaign "1" -- "0..*" Scheduler : scheduledAt

class Delivery {
    +String deliveryID
    +String status
    +sendEmail()
    +handleFailure()
}
Campaign "1" -- "0..*" Delivery : triggers
Subscriber "1" -- "0..*" Delivery : receives
@enduml
