@startuml

class User {
  +username: String
  +password: String
  +authenticate(): Boolean
}

class AuthService {
  +verifyCredentials(user: User): Boolean
}

class WebServer {
  +hostResource(resource: Resource): Boolean
}

class Resource {
  +id: String
  +content: String
}

class HTTPRequest {
  +method: String
  +url: String
}

class HTTPHandler {
  +handleRequest(request: HTTPRequest): Response
}

class Logger {
  +logRequest(request: HTTPRequest)
  +logResponse(response: Response)
}

class UserSession {
  +sessionId: String
  +user: User
}

class SecurityRule {
  +ruleId: String
  +action: String
}

class Admin {
  +defineRule(rule: SecurityRule): Boolean
}

class Database {
  +connectionString: String
  +executeQuery(query: String): ResultSet
}

class Cache {
  +addResource(resource: Resource)
  +getResource(id: String): Resource
}

class LoadBalancer {
  +distributeRequest(request: HTTPRequest): WebServer
}

class ErrorHandler {
  +handleError(errorCode: String): Response
}

User --> AuthService : "authenticates with"
WebServer --> Resource : "hosts"
HTTPRequest --> HTTPHandler : "processed by"
HTTPHandler --> Resource : "fetches"
HTTPRequest --> Logger : "logged by"
Response --> Logger : "logged by"
User --> UserSession : "has a session"
WebServer --> UserSession : "manages"
Admin --> SecurityRule : "defines"
WebServer --> SecurityRule : "enforces"
WebServer --> Database : "connects to"
WebServer --> Cache : "uses"
Cache --> Resource : "stores"
LoadBalancer --> WebServer : "balances load between"
WebServer --> ErrorHandler : "delegates errors to"
ErrorHandler --> Response : "produces"

@enduml
