@startuml
class User {
  +userId: String
  +username: String
  +email: String
  +password: String
  +register()
  +login()
  +updateProfile()
}

class Subscription {
  +subscriptionId: String
  +planName: String
  +validityPeriod: String
}

User "1" -- "0..*" Subscription : subscribes

class Video {
  +videoId: String
  +title: String
  +genre: String
  +description: String
}

class Category {
  +categoryId: String
  +name: String
}

Video "1" -- "1..*" Category : belongsTo

class VideoPlayer {
  +play()
  +pause()
  +seek(position: String)
  +buffer()
}

VideoPlayer "1" -- "1" Video : plays

class Review {
  +reviewId: String
  +content: String
  +rating: int
}

Review "1" -- "1" User : writtenBy
Review "1" -- "1" Video : pertainsTo

class Payment {
  +paymentId: String
  +amount: double
  +paymentDate: DateTime
}

Payment "1" -- "1" Subscription : processedFor

class Search {
  +query: String
  +searchResults(): List<Video>
}

Search "1" -- "0..*" Video : returns

class VideoUploader {
  +upload(videoFile: File)
}

VideoUploader "1" -- "1" Video : uploads

class Recommendation {
  +recommendedVideos(): List<Video>
}

Recommendation "1" -- "0..*" User : forUser
Recommendation "1" -- "0..*" Video : includes

class License {
  +licenseId: String
  +expiryDate: DateTime
}

License "1" -- "1" Video : associatedWith

class LiveStream {
  +streamId: String
  +startTime: DateTime
  +endTime: DateTime
}

LiveStream "1" -- "0..*" User : watches

class Moderation {
  +flagContent(videoId: String)
}

Moderation "1" -- "1" Video : flags

class VideoAnalytics {
  +viewCount: int
  +likeCount: int
  +commentCount: int
}

VideoAnalytics "1" -- "1" Video : tracks

@enduml
