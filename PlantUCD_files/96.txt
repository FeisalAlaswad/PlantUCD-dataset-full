@startuml
class RemoteDevice {
  +id: String
  +status: String
  +sensorData: String
}

class Sensor {
  +type: String
  +value: String
}

RemoteDevice "1" -- "n" Sensor : has

class RemoteDevice {
  +id: String
  +status: String
  +lastCheckTime: String
}

class StatusMonitor {
  +status: String
  +alert(): String
}

RemoteDevice "1" -- "1" StatusMonitor : monitors

class CentralDatabase {
  +dataID: String
  +storeData(): void
}

class RemoteDevice {
  +id: String
  +sensorData: String
}

CentralDatabase "1" -- "n" RemoteDevice : stores data

class UserInterface {
  +displayData(): void
}

class RemoteDevice {
  +id: String
  +sensorData: String
}

UserInterface "1" -- "n" RemoteDevice : displays

class GraphicalVisualization {
  +generateGraph(): void
}

class Sensor {
  +type: String
  +value: String
}

GraphicalVisualization "1" -- "n" Sensor : visualizes

class Sensor {
  +type: String
  +value: String
}

class AlertSystem {
  +threshold: String
  +triggerAlert(): void
}

Sensor "1" -- "1" AlertSystem : triggers

class User {
  +username: String
  +password: String
}

class Role {
  +roleName: String
}

User "1" -- "1" Role : has

class RemoteDevice {
  +id: String
  +configurationSettings: String
}

class Admin {
  +name: String
  +configureDevice(): void
}

Admin "1" -- "n" RemoteDevice : configures

class AuditTrail {
  +changeType: String
  +timestamp: String
}

class Admin {
  +name: String
  +modifyConfig(): void
}

AuditTrail "1" -- "1" Admin : logs changes

class ScheduledTask {
  +taskName: String
  +time: String
}

class RemoteDevice {
  +id: String
  +status: String
}

ScheduledTask "1" -- "n" RemoteDevice : monitors


@enduml
