@startUML
class User {
    +userId: String
    +email: String
    +password: String
}

class AccountManager {
    +createAccount(user: User): void
    +updateAccount(user: User): void
    +deleteAccount(userId: String): void
}

class Authentication {
    +login(email: String, password: String): Boolean
    +logout(userId: String): void
}

class Email {
    +emailId: String
    +sender: String
    +recipients: List<String>
    +subject: String
    +body: String
}

class EmailSender {
    +sendEmail(email: Email): Boolean
}

class Inbox {
    +emails: List<Email>
}

class SpamFilter {
    +filter(email: Email): Boolean
}

class EmailSearch {
    +searchByKeyword(keyword: String): List<Email>
    +searchBySender(sender: String): List<Email>
}

class Log {
    +logId: String
    +action: String
    +timestamp: DateTime
}

class Logger {
    +logAction(log: Log): void
}

class Attachment {
    +fileName: String
    +fileSize: int
}

class MFA {
    +generateCode(userId: String): String
    +validateCode(userId: String, code: String): Boolean
}

class Draft {
    +draftId: String
    +email: Email
}

AccountManager --> User : "manages"
Authentication --> User : "authenticates"
EmailSender --> Email : "sends"
Email --> User : "has sender"
Inbox --> Email : "stores"
Inbox --> User : "belongs to"
SpamFilter --> Email : "filters"
EmailSearch --> Inbox : "searches"
EmailSearch --> Email : "fetches results"
Logger --> Log : "creates"
Log --> User : "records actions"
Email --> Attachment : "includes"
MFA --> User : "validates"
User --> Draft : "has drafts"
Draft --> Email : "stores email content"
@endUML
