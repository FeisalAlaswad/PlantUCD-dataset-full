@startUML
class User {
    + username: String
    + password: String
    + email: String
}

class Registration {
    + register(user: User): Boolean
}
User "1" -- "1" Registration

class Encryption {
    + encrypt(data: String): String
    + decrypt(data: String): String
}
User "1" -- "1" Encryption : uses

class Login {
    + authenticate(username: String, password: String): Boolean
}
User "1" -- "1" Login

class AccountLockout {
    + failedAttempts: int
    + lockAccount(user: User): void
}
User "1" -- "1" AccountLockout

class PasswordReset {
    + resetPassword(user: User, newPassword: String): Boolean
}
User "1" -- "1" PasswordReset
PasswordReset "1" -- "1" Encryption : uses

class LoginActivity {
    + timestamp: Date
    + isSuccess: Boolean
    + user: User
}
LoginActivity "1" -- "1" User

class Role {
    + name: String
}
User "1" -- "1" Role

class Session {
    + sessionId: String
    + user: User
    + startTime: Date
    + endTime: Date
}
User "1" -- "1" Session

class TwoFactorAuth {
    + generateOTP(user: User): String
    + verifyOTP(user: User, otp: String): Boolean
}
User "1" -- "1" TwoFactorAuth

class AccountManagement {
    + deactivateAccount(user: User): void
    + reactivateAccount(user: User): void
}
User "1" -- "1" AccountManagement
@endUML
