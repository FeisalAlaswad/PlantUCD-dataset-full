@startuml
class Product {
    +id: int
    +name: String
    +price: double
    +stock: int
}

class Inventory {
    +addProduct(product: Product): void
    +updateProduct(product: Product): void
    +deleteProduct(productId: int): void
}

class Supplier {
    +id: int
    +name: String
    +contactInfo: String
}

class CustomerOrder {
    +orderId: int
    +orderDate: Date
    +addItem(product: Product, quantity: int): void
    +finalizeOrder(): void
}

class Customer {
    +customerId: int
    +name: String
    +email: String
}

class SalesReport {
    +generateReport(startDate: Date, endDate: Date): void
}

class Payment {
    +paymentId: int
    +amount: double
    +method: String
    +processPayment(): void
}

class Employee {
    +employeeId: int
    +name: String
    +role: String
}

class Discount {
    +discountId: int
    +description: String
    +percentage: double
}

class InventoryAlert {
    +alertId: int
    +message: String
    +triggerAlert(product: Product): void
}

class StoreLocation {
    +locationId: int
    +address: String
}

Inventory --> Product : "manages"
Product --> Supplier : "supplied by"
CustomerOrder --> Product : "includes"
Customer --> CustomerOrder : "places"
SalesReport --> CustomerOrder : "aggregates"
SalesReport --> Inventory : "analyzes"
CustomerOrder --> Payment : "is paid with"
Employee --> CustomerOrder : "handles"
Product --> Discount : "eligible for"
CustomerOrder --> Discount : "applies"
InventoryAlert --> Inventory : "monitors"
Inventory --> StoreLocation : "belongs to"
CustomerOrder --> StoreLocation : "originates from"
@enduml
