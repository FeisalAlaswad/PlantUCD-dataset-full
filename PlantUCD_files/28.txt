@startUML
class User {
    +name: String
    +email: String
    +id: String
    +password: String
    +register(): void
    +authenticate(): boolean
}

class Candidate {
    +candidateID: String
    +name: String
    +electionID: String
    +addCandidate(): void
    +updateCandidate(): void
    +removeCandidate(): void
}

class Administrator {
    +adminID: String
    +manageCandidates(): void
}

class Election {
    +electionID: String
    +title: String
    +startDate: Date
    +endDate: Date
    +addCandidates(candidate: Candidate): void
}

class Vote {
    +voteID: String
    +userID: String
    +electionID: String
    +candidateID: String
    +castVote(): void
}

class Result {
    +electionID: String
    +candidateID: String
    +votes: int
    +computeResults(): void
}

Administrator --> Candidate : manages
Administrator --> Election : creates
Election "1" *-- "many" Candidate : includes
User --> Vote : casts
Election --> Vote : contains
Election --> Result : generates
Candidate --> Result : associated with
@endUML
